-> DML 

Parte 1: Revisão 
    * PK 
    * FK 
    * Tipos de dados 
    * DDL 
    * DML 

    IDEMPOTÊNCIA 
    Propriedade que algumas ações/operações possuem 
    possibilitando-as serem executadas diversar vezes  sem 
    alterar o resultado após a aplicação inicial. 

    * IF EXISTS 
    * Comandos pertinentes ao DDL e DML

> Melhores práticas em DDL 
    Importante as tabelas possuírem campos que realmente serão 
    utiizados e que sirvam de atributo direto a um objeto em 
    comum.

    * Criar/Acrescentar colunas que são "atributos básicos" do 
    objeto: 
    Exemplo: tabela CLIENTE: coluna TELEFONE/coluna AGENCIA_BANCARIA
    * Cuidado com regras(constraints)
    * Cuidado com o excesso de FKs 
    * Cuidado com o tamanho indevido de colunas 
    Exemplo: coluna CEP VARCHAR(255)

Parte 2: DML - CRUD 

> SELECT 
    SELECT (campos,)
    FROM tabela 
    [condições] 

    SELECT numer, nome FROM banco;
    SELECT numero, nome FROM banco WHERE ativo IS TRUE;
    SELECT numero FROM cliente WHERE email LIKE '%gmail.com';
    SELECT numero FROM agencia

    WHERE banco_numero IN (SELECT numero FROM banco WHERE nome
    ILIKE '%Bradesco'); não é recomendado

    Não é uma boa pratica usar o ILIKE 

> SELECT - Codinçaõ (WHERE/ AND / OR)

    WHERE (coluna/condiçaõ):
        * = 
        * > / >=
        * < / <=
        * <> / !=
        * LIKE
        * ILIKE 
        * IN 
    Primeira condiçaõ sempre WHERE. 
    Semais condições, AND ou OR.

> SELECT - Idempotência 
    SELECT (campos)
    FROM tabela1 
    WHERE EXISTS (
        SELECT (campos,)
        FROM tabela2 
        WHERE campo1 = valor1
        [ANDE/OR campoN = valorN]
    );

    Não é uma boa prática. 
    Melhor prática utilizar LEFT JOIN.

> SELECT * (evitar)
    Nem sempre vc quer trazer todas os campos da sua tabela.

> INSERT 
    INSERT (campos da tabelas,) VALUES (valores,);  
    INSERT (campos da tabelas,) SELECT (valores,);

> INSERT - IDEMPOTÊNCIA 
    INSERT INTO agencia (banco_numero, numero, nome) VALUES 
    (341,1, 'Centro da cidade');
    INSERT INTO agencia (banco_numero, numero, nome)
    SELECT 341, 1, 'Centro da cidade'
    WHERE NOT EXISTS (SELECT banco_numero, numero, nome FROM 
    agencia WHERE banco_numero = 341 AND numero = 1 AND nome =
    'Centro da cidade');


> ON CONFLICT
    INSERT INTO agencia (banco_numero, numero, nome) VALUES 
    (341, 1, 'Centro da cidade') ON CONFLICT (banco_numero, 
    numero) DO NOTHING;

> UPDATE
    UPDATE (tabela) SET campo1 = novo_valor WHRE (condição);
> DELETE
    DELETE FROM (tabela) SET campo1 = novo_valor WHERE 
    (condição);

Não usar o UPDATE e DELETE sem condições

> TRUNCATE 
    Definição
    "Esvazia" a tabela. 

    TRUNCATE [TABLE] [ONLY] name [ " ][, ... ]
        [RESTART IDENTITY | CONTINUE IDENTITY ]
        [ CASCADE | RESTRICT ]

    https://github.com/drobcosta/digital_innovation_one


