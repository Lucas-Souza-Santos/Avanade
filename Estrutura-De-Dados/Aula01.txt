-> Estrutura de Dados
	Estrutura de Dados é uma estrutura organizada de dados na
memória de um computador ou em qualquer dispositivo de armazenamento,
de forma que os dados possam ser utilizados de forma correta.

	Essas estruturas encontram muitas aplicações no 
desenvolvimento de sistemas, sendo que algumas são altamente
especializadas e utilizadas em tarefas específicas.
	Usando as estruturas adequadas através de algoritmos, 
podemos trabalhar com uma grande quantidade de dados, como 
aplicaçoes em bancos de dados ou serviços de busca.

-> Algoritmo
	Um algoritmo é um conjunto de instruçoes estruturadas e 
ordenadas, seu objetivo é realizar uma tarefa ou operaçao especifica.
	Os algoritmos sao utilizados para manipular dados nas 
estruturas de várias formas, como por exemplo: inserir, excluir, 
procurar e ordenar dados.
	Em uma estrutura de dados devemos saber como realizar um 
determinado conjunto de operações básicas, compo por exemplo:
	- Inserir Dados
	- Excluir Dados
	- Localizar um elemento
	- Percorrer todos os itens constituintes da estrutura para
	visualização
	- Classificar, que se resume em colocar os itens da dados em 
	uma determinada ordem (numérica, algabética, etc.)

-> Principais estruturas de Dados
	- Vetores e Matrizes(Arrays)
	- Registro
	- Lista
	- Pilha
	- Fila
	- Árvore
	- Tabela Hash
	- Grafos

-> Vetores e Matrizes

	Vetores e Matrizes ou Arrays são estruturas de dados simples
que podem auxiliar quando há muitas variáveis do mesmo tipo em um 
algortimo.

https://portugol-webstudio.cubos.io/ide

	Vetor ou array uni-dimensional é uma variável que armazena
várias variáveis do mesmo tipo.
	O vetor é uma estrutura de dados endexada, que pode 
armazenar uma determinada quantidade de valores do mesmo tipo.

	Matriz ou array multi-dimensional é um vetor de vetores.
	Uma matriz é um vetor que possui duas mais dimensões.

-> Registros
	Um registro é uma estrutura que fornece um formato especializado
para armazenar informações em memória.
	Enquanto Arrays nos peritem armazenar vários dados de um único
tipo de dados, o recurso de registro nos permite armazenar mais de um 
tipo de dado.
	Um registro é composto por campos que especificam cada uma das 
informações que o compõem.
	Abaixo podemos ver alguns campos de exemplo que constituem o 
registro de um cliente: 
+-----------------------+---------------------------------------+
|cpf			|					|
+-----------------------+---------------------------------------+
|nome			|					|
+-----------------------+---------------------------------------+
|endereço		|					|
+-----------------------+---------------------------------------+
|contato		|					|
+-----------------------+---------------------------------------+

	Toda estrutura de registro tem um nome (ex: livro), e seus 
campos ser acessados por meio do uso do operador ponto (.). Por exemplo,
para acessar o preço de um livro, poderíamos utilizar a seguinte
declaração:
livro.preco









